Project Name: CSX Parser
Author:       Chen Liu
Email:        chen.liu@uky.edu


1.Description
This project implements the parser module for the programming language CSX,
by using Java CUP.


2.Modification of CSX grammar
In order to solve the "dangling else" problem, I have modified the ifelse
grammar of CSX language, by requiring the terminal "{" and "}" for every
if and else stmts. The modified grammar and sample are showed below.

   stmt   if (expr) {stmt} else {stmt}

   if (a > b){
     max = a;
   } else {
     max = b;
   }


3.Instruction to compile the program

   make

The command above compiles or recompiles classes. The ".class" files are placed
in subdirectory classes.


4.Instruction to run the program

   make test

The command above will run the program and execute parse function. The default
input file is test.lite. You could redirect the input file through command:

   make test FILENAME = newfilename


5.Sample of test program
There are three test files. test.lite, validtest.lite and invalidtest.lite.
The test.lite contains a valid and comprehensive test program. The two other
files contain sample test programs, as shown below.

invalidtest.lite:
    class invalid {
        int a;
        int b = 1;
        void func {
           if (b == 1) {
           print(a);
           }
        };
    }

result of executing:
    CSX syntax error at line 4
    Couldn't repair and continue parse
    Compilation terminated due to syntax errors.

valid program:
    class valid {
        int a;
        int b = 1;
        void func() {
           if (b == 1) {
           print(a);
           }
        };
    }

result of executing:
    CSX program parsed correctly.
    Here is its unparsing:
    1: class valid {
    2:	    int a;
    3:	    int b = 1;
    4:	    void func (  ) {
    5:		    if (b == 1) {
    6:			    print ( a );
    5:		    }
    4:	    };
    1: } EOF
